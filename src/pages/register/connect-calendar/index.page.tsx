import { Button, Heading, MultiStep, Text } from '@ignite-ui/react'
import { Header, Container } from '../styles'
import { ArrowRight } from 'phosphor-react'
import Head from 'next/head'
// import { api } from '../../../lib/axios'
import { AuthError, ConnectBox, ConnectItem, SessionUser } from './styles'
import { signIn, useSession, signOut } from 'next-auth/react'
import Image from 'next/image'
import { useRouter } from 'next/router'

export default function Register() {
  const session = useSession()
  const router = useRouter()

  const hasAuthError = !!router.query.error

  function handleEndSession() {
    signOut({ callbackUrl: '/' })
  }
  return (
    <>
      <Head>
        <title>Ignite Call - Conectar agenda</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Header>
          <Heading as="strong">Conecte sua agenda</Heading>
          <Text>
            Conecte o seu calendário para verificar automaticamente as horas
            ocupadas e os novos eventos à medida em que são agendados.
          </Text>
          <MultiStep size={4} currentStep={2} />
        </Header>
        <ConnectBox>
          <ConnectItem>
            Google Calendar
            {!session.data && (
              <Button
                variant="secondary"
                size="sm"
                onClick={() => {
                  signIn('google')
                }}
              >
                Conectar
                <ArrowRight />
              </Button>
            )}
          </ConnectItem>
          {hasAuthError && (
            <AuthError size="sm">
              Falha ao se conectar ao google, verifique se você habilitou as
              permissões de acesso ao google calendar
            </AuthError>
          )}
          {session.data && (
            <>
              <SessionUser>
                <Image
                  src={
                    session.data?.user?.image ||
                    'https://static.vecteezy.com/system/resources/thumbnails/009/292/244/small/default-avatar-icon-of-social-media-user-vector.jpg'
                  }
                  alt=""
                  height={100}
                  width={100}
                />
                <Text>
                  {session.data.user?.name} <br></br>
                  {session.data.user?.email}
                </Text>
              </SessionUser>
            </>
          )}

          {session.data && (
            <Button type="submit">
              Próximo passo
              <ArrowRight />
            </Button>
          )}
          <br></br>
          {session.data && (
            <Button
              variant={'secondary'}
              onClick={() => {
                handleEndSession()
              }}
            >
              terminar sessão
            </Button>
          )}
        </ConnectBox>
      </Container>
    </>
  )
}
